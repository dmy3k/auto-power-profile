#!/bin/bash

# Script de instala√ß√£o da extens√£o Auto Power Profile
# Para instalar a extens√£o diretamente do GitHub

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

EXTENSION_ID="auto-power-profile@andrecesarvieira.github.io"
EXTENSION_DIR="$HOME/.local/share/gnome-shell/extensions/$EXTENSION_ID"
TEMP_DIR="/tmp/auto-power-profile-install"

echo -e "${BLUE}üöÄ Instalador da Extens√£o Auto Power Profile${NC}"
echo -e "${BLUE}============================================${NC}"
echo ""

# Verificar se o GNOME Shell est√° dispon√≠vel
if ! command -v gnome-shell &> /dev/null; then
    echo -e "${RED}‚ùå GNOME Shell n√£o encontrado. Esta extens√£o requer GNOME Shell.${NC}"
    exit 1
fi

# Verificar vers√£o do GNOME Shell
GNOME_VERSION=$(gnome-shell --version | grep -oP '\d+' | head -1)
if [[ $GNOME_VERSION -lt 45 ]]; then
    echo -e "${RED}‚ùå GNOME Shell vers√£o $GNOME_VERSION n√£o √© suportada. Requer vers√£o 45 ou superior.${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ GNOME Shell vers√£o $GNOME_VERSION detectado${NC}"

# Verificar depend√™ncias
echo -e "${YELLOW}üìã Verificando depend√™ncias...${NC}"

if ! command -v powerprofilesctl &> /dev/null; then
    echo -e "${RED}‚ùå power-profiles-daemon n√£o encontrado.${NC}"
    echo -e "${YELLOW}üí° Para instalar no Fedora: sudo dnf install power-profiles-daemon${NC}"
    echo -e "${YELLOW}üí° Para instalar no Ubuntu: sudo apt install power-profiles-daemon${NC}"
    exit 1
fi

if ! powerprofilesctl list &> /dev/null; then
    echo -e "${RED}‚ùå power-profiles-daemon n√£o est√° funcionando.${NC}"
    echo -e "${YELLOW}üí° Tente: sudo systemctl enable --now power-profiles-daemon${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ power-profiles-daemon funcionando${NC}"

# Criar diret√≥rio tempor√°rio
echo -e "${YELLOW}üìÅ Preparando instala√ß√£o...${NC}"
rm -rf "$TEMP_DIR"
mkdir -p "$TEMP_DIR"
cd "$TEMP_DIR"

# Baixar extens√£o do GitHub
echo -e "${YELLOW}üì• Baixando extens√£o do GitHub...${NC}"
if command -v git &> /dev/null; then
    git clone --depth 1 https://github.com/andrecesarvieira/auto-power-profile.git .
else
    echo -e "${YELLOW}‚¨áÔ∏è Git n√£o encontrado, baixando via curl...${NC}"
    curl -L https://github.com/andrecesarvieira/auto-power-profile/archive/main.tar.gz | tar xz --strip-components=1
fi

# Build da extens√£o
echo -e "${YELLOW}üîß Compilando extens√£o...${NC}"
chmod +x build.sh
./build.sh > /dev/null 2>&1

# Desabilitar extens√£o se estiver ativa
echo -e "${YELLOW}‚èπÔ∏è Desabilitando extens√£o anterior...${NC}"
gnome-extensions disable $EXTENSION_ID 2>/dev/null || true

# Remover instala√ß√£o anterior
if [ -d "$EXTENSION_DIR" ]; then
    echo -e "${YELLOW}üßπ Removendo instala√ß√£o anterior...${NC}"
    rm -rf "$EXTENSION_DIR"
fi

# Instalar extens√£o
echo -e "${YELLOW}üì¶ Instalando extens√£o...${NC}"
mkdir -p "$EXTENSION_DIR"

# Copiar apenas arquivos necess√°rios
cp -r extension.js prefs.js metadata.json "$EXTENSION_DIR/"
cp -r lib/ ui/ schemas/ locale/ po/ "$EXTENSION_DIR/"

# Verificar se a extens√£o foi instalada corretamente
if [ ! -f "$EXTENSION_DIR/metadata.json" ]; then
    echo -e "${RED}‚ùå Erro na instala√ß√£o da extens√£o${NC}"
    rm -rf "$TEMP_DIR"
    exit 1
fi

# Limpeza
rm -rf "$TEMP_DIR"

# Verificar se estamos em uma sess√£o Wayland/X11
if [ "$XDG_SESSION_TYPE" = "wayland" ] || [ -n "$WAYLAND_DISPLAY" ]; then
    SESSION_TYPE="Wayland"
else
    SESSION_TYPE="X11"
fi

echo ""
echo -e "${GREEN}üéâ Instala√ß√£o conclu√≠da com sucesso!${NC}"
echo ""
echo -e "${YELLOW}üîÑ IMPORTANTE: Reinicie o GNOME Shell para ativar a extens√£o${NC}"
if [ "$SESSION_TYPE" = "X11" ]; then
    echo -e "${BLUE}   X11: Pressione ${YELLOW}Alt+F2${BLUE}, digite ${YELLOW}'r'${BLUE} e pressione Enter${NC}"
else
    echo -e "${BLUE}   Wayland: Fa√ßa logout e login novamente${NC}"
fi
echo ""
echo -e "${BLUE}üìã Ap√≥s reiniciar o GNOME Shell:${NC}"
echo -e "   1. Habilite a extens√£o: ${YELLOW}gnome-extensions enable $EXTENSION_ID${NC}"
echo -e "   2. Configure: ${YELLOW}gnome-extensions prefs $EXTENSION_ID${NC}"
echo -e "   3. Ative 'Desabilitar anima√ß√µes na bateria' para economia extra"
echo ""
echo -e "${BLUE}‚ÑπÔ∏è Informa√ß√µes:${NC}"
echo -e "   ‚Ä¢ Reposit√≥rio: https://github.com/andrecesarvieira/auto-power-profile"
echo -e "   ‚Ä¢ Vers√£o instalada: $(grep -o '"version": [0-9]*' "$EXTENSION_DIR/metadata.json" | grep -o '[0-9]*')"
echo ""
echo -e "${GREEN}‚ú® Ap√≥s reiniciar, a extens√£o gerenciar√° automaticamente a energia!${NC}"